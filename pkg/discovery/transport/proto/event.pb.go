// Code generated by protoc-gen-go. DO NOT EDIT.
// source: event.proto

package protobuf

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Player struct {
	Id                   int32    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Players              int32    `protobuf:"varint,2,opt,name=players,proto3" json:"players,omitempty"`
	Pod                  string   `protobuf:"bytes,3,opt,name=pod,proto3" json:"pod,omitempty"`
	Ip                   string   `protobuf:"bytes,4,opt,name=ip,proto3" json:"ip,omitempty"`
	Port                 int32    `protobuf:"varint,5,opt,name=port,proto3" json:"port,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Player) Reset()         { *m = Player{} }
func (m *Player) String() string { return proto.CompactTextString(m) }
func (*Player) ProtoMessage()    {}
func (*Player) Descriptor() ([]byte, []int) {
	return fileDescriptor_2d17a9d3f0ddf27e, []int{0}
}

func (m *Player) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Player.Unmarshal(m, b)
}
func (m *Player) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Player.Marshal(b, m, deterministic)
}
func (m *Player) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Player.Merge(m, src)
}
func (m *Player) XXX_Size() int {
	return xxx_messageInfo_Player.Size(m)
}
func (m *Player) XXX_DiscardUnknown() {
	xxx_messageInfo_Player.DiscardUnknown(m)
}

var xxx_messageInfo_Player proto.InternalMessageInfo

func (m *Player) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *Player) GetPlayers() int32 {
	if m != nil {
		return m.Players
	}
	return 0
}

func (m *Player) GetPod() string {
	if m != nil {
		return m.Pod
	}
	return ""
}

func (m *Player) GetIp() string {
	if m != nil {
		return m.Ip
	}
	return ""
}

func (m *Player) GetPort() int32 {
	if m != nil {
		return m.Port
	}
	return 0
}

type Event struct {
	GameID               string    `protobuf:"bytes,1,opt,name=gameID,proto3" json:"gameID,omitempty"`
	Players              []*Player `protobuf:"bytes,2,rep,name=players,proto3" json:"players,omitempty"`
	Name                 string    `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *Event) Reset()         { *m = Event{} }
func (m *Event) String() string { return proto.CompactTextString(m) }
func (*Event) ProtoMessage()    {}
func (*Event) Descriptor() ([]byte, []int) {
	return fileDescriptor_2d17a9d3f0ddf27e, []int{1}
}

func (m *Event) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Event.Unmarshal(m, b)
}
func (m *Event) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Event.Marshal(b, m, deterministic)
}
func (m *Event) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Event.Merge(m, src)
}
func (m *Event) XXX_Size() int {
	return xxx_messageInfo_Event.Size(m)
}
func (m *Event) XXX_DiscardUnknown() {
	xxx_messageInfo_Event.DiscardUnknown(m)
}

var xxx_messageInfo_Event proto.InternalMessageInfo

func (m *Event) GetGameID() string {
	if m != nil {
		return m.GameID
	}
	return ""
}

func (m *Event) GetPlayers() []*Player {
	if m != nil {
		return m.Players
	}
	return nil
}

func (m *Event) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func init() {
	proto.RegisterType((*Player)(nil), "protobuf.Player")
	proto.RegisterType((*Event)(nil), "protobuf.Event")
}

func init() { proto.RegisterFile("event.proto", fileDescriptor_2d17a9d3f0ddf27e) }

var fileDescriptor_2d17a9d3f0ddf27e = []byte{
	// 209 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x5c, 0x8e, 0xb1, 0x4e, 0x80, 0x30,
	0x10, 0x86, 0x6d, 0x81, 0x2a, 0x47, 0xa2, 0xe4, 0x06, 0xd3, 0x38, 0x11, 0xa6, 0xc6, 0x81, 0x10,
	0x9c, 0xdd, 0x70, 0x70, 0x33, 0xbc, 0x80, 0x01, 0xa9, 0xda, 0x44, 0x68, 0x53, 0x90, 0x84, 0xb7,
	0x37, 0x9c, 0x10, 0x8c, 0x53, 0xff, 0xfb, 0x9a, 0xbb, 0xff, 0x83, 0x44, 0x2f, 0x7a, 0x9c, 0x0b,
	0xe7, 0xed, 0x6c, 0xf1, 0x8a, 0x9e, 0xee, 0xfb, 0x3d, 0xff, 0x04, 0xf1, 0xf2, 0xd5, 0xae, 0xda,
	0xe3, 0x35, 0x70, 0xd3, 0x4b, 0x96, 0x31, 0x15, 0x35, 0xdc, 0xf4, 0x28, 0xe1, 0xd2, 0xd1, 0xcf,
	0x24, 0x39, 0xc1, 0x63, 0xc4, 0x14, 0x02, 0x67, 0x7b, 0x19, 0x64, 0x4c, 0xc5, 0xcd, 0x16, 0x69,
	0xd7, 0xc9, 0x90, 0x00, 0x37, 0x0e, 0x11, 0x42, 0x67, 0xfd, 0x2c, 0x23, 0x5a, 0xa4, 0x9c, 0xbf,
	0x42, 0xf4, 0xb4, 0x29, 0xe0, 0x2d, 0x88, 0x8f, 0x76, 0xd0, 0xcf, 0x35, 0x95, 0xc5, 0xcd, 0x3e,
	0xe1, 0xfd, 0xdf, 0xc2, 0x40, 0x25, 0x55, 0x5a, 0x1c, 0x9a, 0xc5, 0xaf, 0xe3, 0xa9, 0x80, 0x10,
	0x8e, 0xed, 0xa0, 0x77, 0x07, 0xca, 0xd5, 0x23, 0xc4, 0xb5, 0x99, 0xde, 0xec, 0xa2, 0xfd, 0x8a,
	0x25, 0x08, 0x6a, 0x9b, 0xf0, 0xe6, 0xbc, 0x42, 0xe4, 0xee, 0x3f, 0xc8, 0x2f, 0x14, 0x2b, 0x59,
	0x27, 0x88, 0x3e, 0xfc, 0x04, 0x00, 0x00, 0xff, 0xff, 0xcd, 0x92, 0x43, 0xf5, 0x29, 0x01, 0x00,
	0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// DiscoveryClient is the client API for Discovery service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type DiscoveryClient interface {
	Events(ctx context.Context, opts ...grpc.CallOption) (Discovery_EventsClient, error)
}

type discoveryClient struct {
	cc *grpc.ClientConn
}

func NewDiscoveryClient(cc *grpc.ClientConn) DiscoveryClient {
	return &discoveryClient{cc}
}

func (c *discoveryClient) Events(ctx context.Context, opts ...grpc.CallOption) (Discovery_EventsClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Discovery_serviceDesc.Streams[0], "/protobuf.Discovery/Events", opts...)
	if err != nil {
		return nil, err
	}
	x := &discoveryEventsClient{stream}
	return x, nil
}

type Discovery_EventsClient interface {
	Send(*Event) error
	Recv() (*Event, error)
	grpc.ClientStream
}

type discoveryEventsClient struct {
	grpc.ClientStream
}

func (x *discoveryEventsClient) Send(m *Event) error {
	return x.ClientStream.SendMsg(m)
}

func (x *discoveryEventsClient) Recv() (*Event, error) {
	m := new(Event)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// DiscoveryServer is the server API for Discovery service.
type DiscoveryServer interface {
	Events(Discovery_EventsServer) error
}

// UnimplementedDiscoveryServer can be embedded to have forward compatible implementations.
type UnimplementedDiscoveryServer struct {
}

func (*UnimplementedDiscoveryServer) Events(srv Discovery_EventsServer) error {
	return status.Errorf(codes.Unimplemented, "method Events not implemented")
}

func RegisterDiscoveryServer(s *grpc.Server, srv DiscoveryServer) {
	s.RegisterService(&_Discovery_serviceDesc, srv)
}

func _Discovery_Events_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(DiscoveryServer).Events(&discoveryEventsServer{stream})
}

type Discovery_EventsServer interface {
	Send(*Event) error
	Recv() (*Event, error)
	grpc.ServerStream
}

type discoveryEventsServer struct {
	grpc.ServerStream
}

func (x *discoveryEventsServer) Send(m *Event) error {
	return x.ServerStream.SendMsg(m)
}

func (x *discoveryEventsServer) Recv() (*Event, error) {
	m := new(Event)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

var _Discovery_serviceDesc = grpc.ServiceDesc{
	ServiceName: "protobuf.Discovery",
	HandlerType: (*DiscoveryServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "Events",
			Handler:       _Discovery_Events_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
	},
	Metadata: "event.proto",
}
